name: "planar_quadrotor"

pred_horizon: 96
obs_horizon: 2
action_horizon: 10

controller:
    common:
        sampling_time: 0.1  # sec
        use_single_step_inference: true
    networks:
        obs_dim: 6
        action_dim: 2
        obstacle_encode_dim: 49
    noise_scheduler:
        type: "ddpm"
        ddpm:
            num_train_timesteps: 100  # number of diffusion iterations
            beta_schedule: "squaredcos_cap_v2"
            clip_sample: true  # required when predict_epsilon=False
            prediction_type: "epsilon"
        ddim:  # faster inference
            num_train_timesteps: 100
            beta_schedule: "squaredcos_cap_v2"
            clip_sample: true
            prediction_type: "epsilon"
        dpmsolver:  # faster inference, experimental
            num_train_timesteps: 100
            beta_schedule: "squaredcos_cap_v2"
            prediction_type: "epsilon"
            use_karras_sigmas: true

cbf_clf_controller:
    denoising_guidance_step: 100  # equals num_train_timesteps
    cbf_alpha: 10.0
    clf_gamma: 0.03
    penalty_slack_cbf: 1.0e+3
    penalty_slack_clf: 1.0

trainer:
    use_ema: true
    batch_size: 256
    optimizer:
        name: "adamw"
        learning_rate: 1.0e-4
        weight_decay: 1.0e-6
    lr_scheduler:
        name: "cosine"
        num_warmup_steps: 500

dataloader:
    batch_size: 256

normalizer:
    action:
        min: [0.050000499933958054, -0.800000011920929]
        max: [1.5, 0.800000011920929]
    observation:
        min: [-0.0036145851481705904, -1.4950898885726929, -0.5092630982398987, -1.4461872577667236, -4.008443832397461, -0.800000011920929]
        max: [8.253850936889648, 1.5, 8.505622863769531, 1.5, 5.788300514221191, 0.800000011920929]

simulator:
    m_q: 1.0 # kg
    I_xx: 0.1 # kg.m^2
    l_q: 1 # m, length of the quadrotor
    w_q : 1
    dt: 0.01